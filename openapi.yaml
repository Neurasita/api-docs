openapi: 3.1.0

info:
  title: "Neurasita: Dokumentasi API"
  version: 1.0.0-dev
  description: |
    Description
servers:
  - url: "http://{HOST}/{PORT}/api/v1"
    variables:
      HOST:
        default: 127.0.0.1
      PORT:
        default: "3000"
    description: Development server
  - url: "https://neurasita.id/api/v1"

tags:
  - name: Authentication
  - name: Users
  - name: Profiles
  - name: Plants
  - name: Diseases
  - name: Dataset
  - name: Image Classification
  - name: Hello World

paths:
  /auth/sign-up:
    post:
      summary: Mendaftar sebagai user baru
      description: Mendaftar sebagai user baru
      tags:
        - Users
        - Authentication
      requestBody:
        $ref: "#/components/requestBodies/SignRequest"
      responses:
        200:
          $ref: "#/components/responses/CreateSuccess"
        400:
          $ref: "#/components/responses/ErrorMalformedRequest"
        422:
          $ref: "#/components/responses/ErrorValidation"
        500:
          $ref: "#/components/responses/ErrorInternal"

  /auth/sign-in:
    post:
      summary: Sign In user
      description: Sign In user
      tags:
        - Users
        - Authentication
      requestBody:
        $ref: "#/components/requestBodies/SignRequest"

  /auth/refreh:
    post:
      summary: Refresh access token
      description: Refresh access token
      tags:
        - Users
        - Authentication

  /users:
    get:
      tags:
        - Users
      summary: Mendapatkan daftar (list) user

  /users/{id}:
    get:
      tags:
        - Users
      summary: Detail satu user berdasarkan id (uuid)

    delete:
      tags:
        - Users
      summary: Menghapus satu user berdasarkan id (uuid)

  /users/{id}/password:
    put:
      tags:
        - Authentication
        - Users
      summary: Mengganti password user

  /users/{id}/email:
    put:
      tags:
        - Authentication
        - Users
      summary: Mengganti email user

  /users/{id}/profiles:
    post:
      tags:
        - Users
        - Profiles
      summary: Create new user profile
      description: Create new user profile

    get:
      tags:
        - Users
        - Profiles
      summary: Get user profile by id
      description: Get user profile by id

    put:
      tags:
        - Users
        - Profiles
      summary: Update user profile
      description: Update user profile

  /plants:
    get:
      deprecated: false
      tags:
        - Plants
    post:
      deprecated: false
      tags:
        - Plants

  /plants/{id}:
    get:
      deprecated: false
      tags:
        - Plants

    put:
      deprecated: false
      tags:
        - Plants

    delete:
      deprecated: false
      tags:
        - Plants

  /diseases:
    get:
      deprecated: false
      tags:
        - Diseases
    post:
      deprecated: false
      tags:
        - Diseases

  /diseases/{id}:
    get:
      deprecated: false
      tags:
        - Diseases

    put:
      deprecated: false
      tags:
        - Diseases

    delete:
      deprecated: false
      tags:
        - Diseases

  /dataset/ic:
    get:
      deprecated: false
      tags:
        - Dataset
        - Image Classification

  /dataset/ic/{id}:
    get:
      deprecated: false
      tags:
        - Dataset
        - Image Classification

    put:
      deprecated: false
      tags:
        - Dataset
        - Image Classification

    delete:
      deprecated: false
      tags:
        - Dataset
        - Image Classification

  /files:
    post:
      deprecated: false

  /files/{id}:
    get:
      deprecated: false
    put:
      deprecated: false
    delete:
      deprecated: false

  /hello-world:
    get:
      summary: Hello world!
      description: Hello world!
      tags:
        - Hello World
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  hello:
                    type: string
                    example: world!

components:
  schemas:
    BaseResponseSuccess:
      type: object
      properties:
        accessed_at:
          $ref: "#/components/schemas/DateTime"
        success:
          type: boolean
          default: true

    BaseResponseError:
      type: object
      properties:
        accessed_at:
          $ref: "#/components/schemas/DateTime"
        success:
          type: boolean
          default: false

    UUID:
      type: string
      format: uuid

    Email:
      type: string
      format: email

    Password:
      type: string
      format: password

    JWTToken:
      type: string
      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiZTg3YmRmZTgtNjY4MC00ZGI2LTliNDAtNjY1NmMyMjM3YjM1IiwibmFtZSI6IkZpeHlDb2RlciIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTcyMTUxMzYwMCwiZXhwIjoxNzIxNTE3MjAwfQ.rnQ1Iu5E4rAsWm7_nUoI9pb0nDrr6VuSr7cYF3Ox5uY

    DateTime:
      type: string
      format: date-time

  requestBodies:
    SignRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                $ref: "#/components/schemas/Email"
              password:
                $ref: "#/components/schemas/Password"
  responses:
    CreateSuccess:
      description: body jika sign up berhasil
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponseSuccess"
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      users:
                        type: object
                        properties:
                          id:
                            $ref: "#/components/schemas/UUID"
                          created_at:
                            $ref: "#/components/schemas/DateTime"

    ErrorInternal:
      description: Internal error response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponseError"
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      error:
                        type: object
                        properties:
                          message:
                            type: string
                            default: internal server error

    ErrorValidation:
      description: Validation error response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponseError"
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      error:
                        type: object
                        properties:
                          message:
                            type: string
                            default: validation error
                          detail:
                            type: array
                            items:
                              type: object
                              properties:
                                field:
                                  type: string
                                  example: email
                                violation:
                                  type: string
                                  example: email harus berupa alamat email yang valid

    ErrorMalformedRequest:
      description: Malformed request body
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/BaseResponseError"
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      error:
                        type: object
                        properties:
                          message:
                            type: string
                            default: malformed request body
